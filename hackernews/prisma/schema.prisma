generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  userName  String
  email     String    @unique
  date      DateTime  @default(now())
  role      Role      @default(AUTHOR)
  isFlagged Boolean   @default(false)
  article   Article[]
  comments   Comment[]
}

model Article {
  id         Int      @id @default(autoincrement())
  authorId   Int      @default(1)
  title      String   @unique
  content    String
  date       DateTime @default(now())
  isFlagged  Boolean  @default(false)
  isDeleted  Boolean  @default(false)
  tagId      Int?     @default(1)
  votes      Int?     @default(0)
  category   String?
  viewsCount Int?
  userTable  User     @relation(fields: [authorId], references: [id])
  comments    Comment[]
}

model Job {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  title          String?
  companyName    String?
  location       String?
  description    String?
  employmentType String?
  JobSkill       JobSkill[]
}

model JobSkill {
  id    Int    @id @default(autoincrement())
  jobId Int
  skill String
  Job   Job    @relation(fields: [jobId], references: [id])
}


model Subscriber {
  id    Int    @id @default(autoincrement())
  email String @db.VarChar(100)
}

model Comment {
  id String @id
  content String
  parentCommentId Int @default(0)
  date DateTime
  articleId Int
  article Article @relation(fields: [articleId], references:[id])
  authorId Int
  author User @relation(fields: [authorId], references: [id])
}

enum Role {
  ADMIN
  EDITOR
  AUTHOR
}



